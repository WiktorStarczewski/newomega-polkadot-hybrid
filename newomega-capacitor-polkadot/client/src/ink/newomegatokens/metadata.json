{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0x3a8afc75f79cc1af8384aeb3311b9b874b509606f5c85487060e6c101b6ff480",
    "language": "ink! 3.0.0-rc4",
    "compiler": "rustc 1.55.0-nightly"
  },
  "contract": {
    "name": "newomegatokens",
    "version": "1.0.0",
    "authors": [
      "Wiktor Starczewski <celrisen@gmail.com>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [],
        "docs": [
          "Initialize a default instance of this ERC-1155 implementation."
        ],
        "name": [
          "new"
        ],
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "operator",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 22
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "from",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 22
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "to",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 22
            }
          },
          {
            "docs": [],
            "indexed": false,
            "name": "token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          },
          {
            "docs": [],
            "indexed": false,
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          }
        ],
        "docs": [
          " Indicate that a token transfer has occured.",
          "",
          " This must be emitted even if a zero value transfer occurs."
        ],
        "name": "TransferSingle"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "name": "owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "operator",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "docs": [],
            "indexed": false,
            "name": "approved",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 21
            }
          }
        ],
        "docs": [
          " Indicate that an approval event has happened."
        ],
        "name": "ApprovalForAll"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "name": "value",
            "type": {
              "displayName": [
                "ink_prelude",
                "string",
                "String"
              ],
              "type": 23
            }
          },
          {
            "docs": [],
            "indexed": true,
            "name": "token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          }
        ],
        "docs": [
          " Indicate that a token's URI has been updated."
        ],
        "name": "Uri"
      }
    ],
    "messages": [
      {
        "args": [
          {
            "name": "storage_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [
          " Authorises the Storage contract to fire methods on this one.",
          "",
          " # Arguments",
          "",
          " * `storage_address` - AccountId of the Storage contract"
        ],
        "mutates": true,
        "name": [
          "authorise_storage_contract"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x52c045fe"
      },
      {
        "args": [
          {
            "name": "industrial_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [
          " Authorises the Industrial contract to fire methods on this one.",
          "",
          " # Arguments",
          "",
          " * `industrial_address` - AccountId of the Industrial contract"
        ],
        "mutates": true,
        "name": [
          "authorise_industrial_contract"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x36958c59"
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          }
        ],
        "docs": [
          " Create the initial supply for a token.",
          "",
          " The initial supply will be provided to the caller (a.k.a the minter), and the",
          " `token_id` will be assigned by the smart contract."
        ],
        "mutates": true,
        "name": [
          "create"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "TokenId"
          ],
          "type": 8
        },
        "selector": "0xab700a1b"
      },
      {
        "args": [
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          },
          {
            "name": "for_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [
          " Create the initial supply for a token and assign it to an account."
        ],
        "mutates": true,
        "name": [
          "create_for"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "TokenId"
          ],
          "type": 8
        },
        "selector": "0xb536207f"
      },
      {
        "args": [
          {
            "name": "token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          }
        ],
        "docs": [
          " Mint a `value` amount of `token_id` tokens.",
          "",
          " It is assumed that the token has already been `create`-ed. The newly minted supply will",
          " be assigned to the caller (a.k.a the minter)."
        ],
        "mutates": true,
        "name": [
          "mint"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 16
        },
        "selector": "0xcfdd9aa2"
      },
      {
        "args": [
          {
            "name": "token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          },
          {
            "name": "for_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [
          " Burn a `value` amount of `token_id` tokens.",
          "",
          " It is assumed that the token has already been `create`-ed. "
        ],
        "mutates": true,
        "name": [
          "burn_for"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 16
        },
        "selector": "0xf42a261c"
      },
      {
        "args": [
          {
            "name": "token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          },
          {
            "name": "for_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [
          " Mint a `value` amount of `token_id` tokens for `for_account`.",
          "",
          " It is assumed that the token has already been `create`-ed. The newly minted supply will",
          " be assigned to the account specified in for_account."
        ],
        "mutates": true,
        "name": [
          "mint_for"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 16
        },
        "selector": "0xfd152a44"
      },
      {
        "args": [
          {
            "name": "for_account",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "get_all_tokens_for"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 18
        },
        "selector": "0xa78ddb06"
      },
      {
        "args": [],
        "docs": [],
        "mutates": false,
        "name": [
          "get_token_count"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "TokenId"
          ],
          "type": 8
        },
        "selector": "0x744362af"
      },
      {
        "args": [
          {
            "name": "from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "to",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          },
          {
            "name": "data",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 19
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "Erc1155",
          "safe_transfer_from"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 16
        },
        "selector": "0x5324d556"
      },
      {
        "args": [
          {
            "name": "from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "to",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "token_ids",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 18
            }
          },
          {
            "name": "values",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 18
            }
          },
          {
            "name": "data",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 19
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "Erc1155",
          "safe_batch_transfer_from"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 16
        },
        "selector": "0xf7f5fd62"
      },
      {
        "args": [
          {
            "name": "owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "Erc1155",
          "balance_of"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Balance"
          ],
          "type": 8
        },
        "selector": "0x164b9ba0"
      },
      {
        "args": [
          {
            "name": "owners",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 20
            }
          },
          {
            "name": "token_ids",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 18
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "Erc1155",
          "balance_of_batch"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 18
        },
        "selector": "0x221b4f73"
      },
      {
        "args": [
          {
            "name": "operator",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "approved",
            "type": {
              "displayName": [
                "bool"
              ],
              "type": 21
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "Erc1155",
          "set_approval_for_all"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 16
        },
        "selector": "0x332ba788"
      },
      {
        "args": [
          {
            "name": "owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "operator",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "Erc1155",
          "is_approved_for_all"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "bool"
          ],
          "type": 21
        },
        "selector": "0x36034d3e"
      },
      {
        "args": [
          {
            "name": "_operator",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "_from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "_token_id",
            "type": {
              "displayName": [
                "TokenId"
              ],
              "type": 8
            }
          },
          {
            "name": "_value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 8
            }
          },
          {
            "name": "_data",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 19
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "Erc1155TokenReceiver",
          "on_received"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 19
        },
        "selector": "0xf23a6e61"
      },
      {
        "args": [
          {
            "name": "_operator",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "_from",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 5
            }
          },
          {
            "name": "_token_ids",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 18
            }
          },
          {
            "name": "_values",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 18
            }
          },
          {
            "name": "_data",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 19
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "Erc1155TokenReceiver",
          "on_batch_received"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 19
        },
        "selector": "0xbc197c81"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "ty": 1
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                                      "ty": 2
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0100000001000000000000000000000000000000000000000000000000000000",
                                          "ty": 3
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0200000000000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0200000001000000000000000000000000000000000000000000000000000000",
                          "ty": 10
                        }
                      },
                      "offset": "0x0100000001000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "balances"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0200000001000000000000000000000000000000000000000000000000000000",
              "ty": 11
            }
          },
          "name": "approvals"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0300000001000000000000000000000000000000000000000000000000000000",
              "ty": 8
            }
          },
          "name": "token_id_nonce"
        },
        {
          "layout": {
            "cell": {
              "key": "0x0400000001000000000000000000000000000000000000000000000000000000",
              "ty": 5
            }
          },
          "name": "creator"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "cell": {
                      "key": "0x0500000001000000000000000000000000000000000000000000000000000000",
                      "ty": 2
                    }
                  },
                  "name": "len"
                },
                {
                  "layout": {
                    "array": {
                      "cellsPerElem": 1,
                      "layout": {
                        "cell": {
                          "key": "0x0500000002000000000000000000000000000000000000000000000000000000",
                          "ty": 5
                        }
                      },
                      "len": 4294967295,
                      "offset": "0x0600000001000000000000000000000000000000000000000000000000000000"
                    }
                  },
                  "name": "elems"
                }
              ]
            }
          },
          "name": "owners"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_vacant",
              "type": 2,
              "typeName": "Index"
            },
            {
              "name": "len",
              "type": 2,
              "typeName": "u32"
            },
            {
              "name": "len_entries",
              "type": 2,
              "typeName": "u32"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Header"
      ]
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 9,
                  "typeName": "VacantEntry"
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 4,
                  "typeName": "T"
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        4
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "tuple": [
          5,
          8
        ]
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 6,
              "typeName": "[u8; 32]"
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "AccountId"
      ]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 7
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "next",
              "type": 2,
              "typeName": "Index"
            },
            {
              "name": "prev",
              "type": 2,
              "typeName": "Index"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "VacantEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 8,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 2,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        8
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 15,
              "typeName": "[(K, V)]"
            }
          ]
        }
      },
      "params": [
        12
      ],
      "path": [
        "BTreeMap"
      ]
    },
    {
      "def": {
        "tuple": [
          13,
          14
        ]
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "owner",
              "type": 5,
              "typeName": "AccountId"
            },
            {
              "name": "operator",
              "type": 5,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "newomegatokens",
        "newomegatokens",
        "Approval"
      ]
    },
    {
      "def": {
        "tuple": []
      }
    },
    {
      "def": {
        "sequence": {
          "type": 12
        }
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 14,
                  "typeName": "T"
                }
              ],
              "name": "Ok"
            },
            {
              "fields": [
                {
                  "type": 17,
                  "typeName": "E"
                }
              ],
              "name": "Err"
            }
          ]
        }
      },
      "params": [
        14,
        17
      ],
      "path": [
        "Result"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "UnexistentToken"
            },
            {
              "discriminant": 1,
              "name": "ZeroAddressTransfer"
            },
            {
              "discriminant": 2,
              "name": "NotApproved"
            },
            {
              "discriminant": 3,
              "name": "InsufficientBalance"
            },
            {
              "discriminant": 4,
              "name": "SelfApproval"
            },
            {
              "discriminant": 5,
              "name": "BatchTransferMismatch"
            }
          ]
        }
      },
      "path": [
        "newomegatokens",
        "Error"
      ]
    },
    {
      "def": {
        "sequence": {
          "type": 8
        }
      }
    },
    {
      "def": {
        "sequence": {
          "type": 7
        }
      }
    },
    {
      "def": {
        "sequence": {
          "type": 5
        }
      }
    },
    {
      "def": {
        "primitive": "bool"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 5,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        5
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "primitive": "str"
      }
    }
  ]
}