{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0xdca354e7738bf992eced9a78d3b1fd4617813d67edceaca481738117a2409756",
    "language": "ink! 3.0.0-rc4",
    "compiler": "rustc 1.55.0-nightly"
  },
  "contract": {
    "name": "newomegauniversestorage",
    "version": "1.0.0",
    "authors": [
      "Wiktor Starczewski <celrisen@gmail.com>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [],
        "docs": [],
        "name": [
          "new"
        ],
        "selector": "0x9bae9d5e"
      },
      {
        "args": [],
        "docs": [],
        "name": [
          "default"
        ],
        "selector": "0xed4b9d1b"
      }
    ],
    "docs": [
      " Isolated storage for all things which should be considered player progress.",
      " This module should only ever change if a serious API change is needed, but otherwise",
      " it should survive most upgrades of the rest of the system, preserving the Game Board",
      " (state of the game) across upgrades and bugfixes.",
      " The only logic that belongs here is accessors for the storage."
    ],
    "events": [],
    "messages": [
      {
        "args": [
          {
            "name": "delegator_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          " Authorises the Delegator contract to fire methods on this one.",
          "",
          " # Arguments",
          "",
          " * `delegator_address` - AccountId of the Delegator contract"
        ],
        "mutates": true,
        "name": [
          "authorise_delegator"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xdd9c74d2"
      },
      {
        "args": [
          {
            "name": "universe_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          " Authorises the Universe contract to fire methods on this one.",
          "",
          " # Arguments",
          "",
          " * `universe_address` - AccountId of the Universe contract"
        ],
        "mutates": true,
        "name": [
          "authorise_universe_contract"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x97a1583b"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "is_registered"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "bool"
          ],
          "type": 14
        },
        "selector": "0xb385fce3"
      },
      {
        "args": [
          {
            "name": "coord",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          }
        ],
        "docs": [
          " Gets a System according to its coordinate",
          "",
          " # Arguments",
          "",
          " * `coord` - The SystemCoordinate of the system to get",
          "",
          " # Returns",
          "",
          " * `system` - An Option containing the System, or None"
        ],
        "mutates": false,
        "name": [
          "get_system"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Option"
          ],
          "type": 27
        },
        "selector": "0xf0de6585"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "get_asset"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "PlayerAssets"
          ],
          "type": 26
        },
        "selector": "0xcbe89181"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "system_id",
            "type": {
              "displayName": [
                "SystemId"
              ],
              "type": 8
            }
          },
          {
            "name": "system",
            "type": {
              "displayName": [
                "System"
              ],
              "type": 11
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "add_system"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xf254e3e8"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "asset",
            "type": {
              "displayName": [
                "PlayerAssets"
              ],
              "type": 26
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "add_asset"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xc735a93b"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "amount",
            "type": {
              "displayName": [
                "SystemId"
              ],
              "type": 8
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "increment_last_system"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xe031e71c"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "selection",
            "type": {
              "displayName": [],
              "type": 17
            }
          },
          {
            "name": "modules",
            "type": {
              "displayName": [],
              "type": 18
            }
          },
          {
            "name": "targeting",
            "type": {
              "displayName": [
                "TargetingType"
              ],
              "type": 21
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "update_planet_fleet"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x578f27d6"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "update_planet_owner"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x7884f6ac"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 23
            }
          }
        ],
        "docs": [
          " Renames a planet",
          "",
          " # Arguments",
          "",
          " * `caller` - The player making the rename request",
          " * `target` - SystemCoordinate of the the planet to rename",
          " * `planet_id` - Which planet to rename (0..MAX_PLANETS)",
          " * `name` - The name to set"
        ],
        "mutates": true,
        "name": [
          "rename_planet"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xa02b6292"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          },
          {
            "name": "position",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          }
        ],
        "docs": [
          " Builds gateway out",
          "",
          " # Arguments",
          "",
          " * `target` - SystemCoordinate of the System to build gateway in",
          " * `position` - The target of the gateway"
        ],
        "mutates": true,
        "name": [
          "build_gateway_out"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xaa6ea44b"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          },
          {
            "name": "position",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          }
        ],
        "docs": [
          " Builds gateway in",
          "",
          " # Arguments",
          "",
          " * `caller` - AccountId of the connecting player (building gateway out)",
          " * `target` - SystemCoordinate of the System to build gateway in",
          " * `position` - The target of the gateway"
        ],
        "mutates": true,
        "name": [
          "build_gateway_in"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x981ad902"
      },
      {
        "args": [],
        "docs": [
          " Gets general game statistics",
          "",
          " # Returns",
          "",
          " * `stats` - The game statistics"
        ],
        "mutates": false,
        "name": [
          "get_game_stats"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "GameStats"
          ],
          "type": 28
        },
        "selector": "0xc5ab1911"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "get_universe_map"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 29
        },
        "selector": "0xf6a850b7"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "harvested",
            "type": {
              "displayName": [
                "BlockNumber"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "update_planet_harvested"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x29bb2de7"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 12
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "amount",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          }
        ],
        "docs": [
          " Upgrades a specific planet that the player owns",
          "",
          " # Arguments",
          "",
          " * `caller` - The player to upgrade planet for",
          " * `target`- SystemCoordinate of the system the planet to upgrade is in",
          " * `planet_id` - Which planet to upgrade"
        ],
        "mutates": true,
        "name": [
          "update_planet_level"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xba5b805a"
      },
      {
        "args": [
          {
            "name": "index",
            "type": {
              "displayName": [
                "u64"
              ],
              "type": 8
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "get_player"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "AccountId"
          ],
          "type": 1
        },
        "selector": "0xdee6c4bb"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "cell": {
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "creator"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "cell": {
                      "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                      "ty": 4
                    }
                  },
                  "name": "len"
                },
                {
                  "layout": {
                    "array": {
                      "cellsPerElem": 1,
                      "layout": {
                        "cell": {
                          "key": "0x0100000001000000000000000000000000000000000000000000000000000000",
                          "ty": 1
                        }
                      },
                      "len": 4294967295,
                      "offset": "0x0200000000000000000000000000000000000000000000000000000000000000"
                    }
                  },
                  "name": "elems"
                }
              ]
            }
          },
          "name": "owners"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0100000001000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0200000001000000000000000000000000000000000000000000000000000000",
                                      "ty": 4
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0200000002000000000000000000000000000000000000000000000000000000",
                                          "ty": 6
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0300000001000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0300000002000000000000000000000000000000000000000000000000000000",
                          "ty": 10
                        }
                      },
                      "offset": "0x0200000002000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "systems"
        },
        {
          "layout": {
            "struct": {
              "fields": [
                {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "cell": {
                              "key": "0x0300000002000000000000000000000000000000000000000000000000000000",
                              "ty": 5
                            }
                          },
                          "name": "header"
                        },
                        {
                          "layout": {
                            "struct": {
                              "fields": [
                                {
                                  "layout": {
                                    "cell": {
                                      "key": "0x0400000002000000000000000000000000000000000000000000000000000000",
                                      "ty": 4
                                    }
                                  },
                                  "name": "len"
                                },
                                {
                                  "layout": {
                                    "array": {
                                      "cellsPerElem": 1,
                                      "layout": {
                                        "cell": {
                                          "key": "0x0400000003000000000000000000000000000000000000000000000000000000",
                                          "ty": 24
                                        }
                                      },
                                      "len": 4294967295,
                                      "offset": "0x0500000002000000000000000000000000000000000000000000000000000000"
                                    }
                                  },
                                  "name": "elems"
                                }
                              ]
                            }
                          },
                          "name": "entries"
                        }
                      ]
                    }
                  },
                  "name": "keys"
                },
                {
                  "layout": {
                    "hash": {
                      "layout": {
                        "cell": {
                          "key": "0x0500000003000000000000000000000000000000000000000000000000000000",
                          "ty": 25
                        }
                      },
                      "offset": "0x0400000003000000000000000000000000000000000000000000000000000000",
                      "strategy": {
                        "hasher": "Blake2x256",
                        "postfix": "",
                        "prefix": "0x696e6b20686173686d6170"
                      }
                    }
                  },
                  "name": "values"
                }
              ]
            }
          },
          "name": "assets"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 2,
              "typeName": "[u8; 32]"
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "AccountId"
      ]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 3
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_vacant",
              "type": 4,
              "typeName": "Index"
            },
            {
              "name": "len",
              "type": 4,
              "typeName": "u32"
            },
            {
              "name": "len_entries",
              "type": 4,
              "typeName": "u32"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Header"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 9,
                  "typeName": "VacantEntry"
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 7,
                  "typeName": "T"
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        7
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "tuple": [
          1,
          8
        ]
      }
    },
    {
      "def": {
        "primitive": "u64"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "next",
              "type": 4,
              "typeName": "Index"
            },
            {
              "name": "prev",
              "type": 4,
              "typeName": "Index"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "VacantEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 11,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 4,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        11
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "position",
              "type": 12,
              "typeName": "SystemCoordinate"
            },
            {
              "name": "gateway_in",
              "type": 13,
              "typeName": "Gateway"
            },
            {
              "name": "gateway_out",
              "type": 13,
              "typeName": "Gateway"
            },
            {
              "name": "planets",
              "type": 15,
              "typeName": "Vec<Planet>"
            },
            {
              "name": "discoverer",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "System"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "root",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "system_id",
              "type": 8,
              "typeName": "SystemId"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "SystemCoordinate"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "built",
              "type": 14,
              "typeName": "bool"
            },
            {
              "name": "target",
              "type": 12,
              "typeName": "SystemCoordinate"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "Gateway"
      ]
    },
    {
      "def": {
        "primitive": "bool"
      }
    },
    {
      "def": {
        "sequence": {
          "type": 16
        }
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "selection",
              "type": 17,
              "typeName": "[u8; MAX_SHIPS]"
            },
            {
              "name": "modules",
              "type": 18,
              "typeName": "[Option<TokenId>; MAX_SHIPS]"
            },
            {
              "name": "targeting",
              "type": 21,
              "typeName": "TargetingType"
            },
            {
              "name": "level",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "owner",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "planet_type",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "mineral_type",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "mineral_proof",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "last_harvested",
              "type": 4,
              "typeName": "BlockNumber"
            },
            {
              "name": "name",
              "type": 22,
              "typeName": "Option<String>"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "Planet"
      ]
    },
    {
      "def": {
        "array": {
          "len": 4,
          "type": 3
        }
      }
    },
    {
      "def": {
        "array": {
          "len": 4,
          "type": 19
        }
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 20,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        20
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "Furthest"
            },
            {
              "discriminant": 1,
              "name": "Closest"
            },
            {
              "discriminant": 2,
              "name": "HighestHp"
            },
            {
              "discriminant": 3,
              "name": "LowestHp"
            },
            {
              "discriminant": 4,
              "name": "HighestSpeed"
            },
            {
              "discriminant": 5,
              "name": "LowestSpeed"
            },
            {
              "discriminant": 6,
              "name": "HighestDefence"
            },
            {
              "discriminant": 7,
              "name": "LowestDefence"
            },
            {
              "discriminant": 8,
              "name": "HighestAttack"
            },
            {
              "discriminant": 9,
              "name": "LowestAttack"
            }
          ]
        }
      },
      "path": [
        "newomega",
        "newomega",
        "TargetingType"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 23,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        23
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "primitive": "str"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 9,
                  "typeName": "VacantEntry"
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 1,
                  "typeName": "T"
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        1
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 26,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 4,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        26
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "name",
              "type": 23,
              "typeName": "String"
            },
            {
              "name": "last_system",
              "type": 8,
              "typeName": "SystemId"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "PlayerAssets"
      ]
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 11,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        11
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "no_players",
              "type": 8,
              "typeName": "u64"
            },
            {
              "name": "no_systems",
              "type": 8,
              "typeName": "u64"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "GameStats"
      ]
    },
    {
      "def": {
        "sequence": {
          "type": 11
        }
      }
    }
  ]
}