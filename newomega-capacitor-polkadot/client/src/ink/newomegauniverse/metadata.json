{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0x02285712f3027d83add5958791e8c7585301f1aa39568487dc6e284d5c1235f3",
    "language": "ink! 3.0.0-rc4",
    "compiler": "rustc 1.55.0-nightly"
  },
  "contract": {
    "name": "newomegauniverse",
    "version": "1.0.0",
    "authors": [
      "Wiktor Starczewski <celrisen@gmail.com>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "name": "new_omega_game",
            "type": {
              "displayName": [
                "NewOmegaGame"
              ],
              "type": 4
            }
          },
          {
            "name": "new_omega_storage",
            "type": {
              "displayName": [
                "NewOmegaStorage"
              ],
              "type": 5
            }
          },
          {
            "name": "new_omega_universe_storage",
            "type": {
              "displayName": [
                "NewOmegaUniverseStorage"
              ],
              "type": 6
            }
          }
        ],
        "docs": [],
        "name": [
          "new"
        ],
        "selector": "0x9bae9d5e"
      },
      {
        "args": [],
        "docs": [],
        "name": [
          "default"
        ],
        "selector": "0xed4b9d1b"
      }
    ],
    "docs": [],
    "events": [],
    "messages": [
      {
        "args": [
          {
            "name": "delegator_address",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          " Authorises the Delegator contract to fire methods on this one.",
          "",
          " # Arguments",
          "",
          " * `delegator_address` - AccountId of the Delegator contract"
        ],
        "mutates": true,
        "name": [
          "authorise_delegator"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xdd9c74d2"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "coord",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 7
            }
          }
        ],
        "docs": [
          " Gets a System according to its coordinate and check whether its attackable by a given player",
          "",
          " # Arguments",
          "",
          " * `caller` - The AccountId of a player to check attackability for",
          " * `coord` - The SystemCoordinate of the system to get",
          "",
          " # Returns",
          "",
          " * `system` - An Option containing the System, or None",
          " * `attackable` - Whether the System is attackable by the player `caller`"
        ],
        "mutates": false,
        "name": [
          "get_system_check"
        ],
        "payable": false,
        "returnType": {
          "displayName": [],
          "type": 9
        },
        "selector": "0xd40ead8d"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 23
            }
          }
        ],
        "docs": [
          " Registers a player in the Universe module. ",
          " Performs all neccesary ensures so that the account is fully playable.",
          "",
          " # Arguments",
          "",
          " * `caller` - The player to register",
          " * `name` - The name under which to register the player"
        ],
        "mutates": true,
        "name": [
          "register_player"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x44c9d826"
      },
      {
        "args": [
          {
            "name": "players",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 24
            }
          }
        ],
        "docs": [
          " Translates AccountIds of players into their registered names",
          "",
          " # Arguments",
          "",
          " * `players` - The AccountIds of players to get names for",
          "",
          " # Returns",
          "",
          " * `names` - Vec of Strings containing the names"
        ],
        "mutates": false,
        "name": [
          "get_player_names"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 25
        },
        "selector": "0x67a63ab4"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 7
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "selection",
            "type": {
              "displayName": [],
              "type": 16
            }
          },
          {
            "name": "modules",
            "type": {
              "displayName": [],
              "type": 17
            }
          },
          {
            "name": "targeting",
            "type": {
              "displayName": [
                "TargetingType"
              ],
              "type": 20
            }
          }
        ],
        "docs": [
          " Reinforces a players owned planet with a fleet selection and sets tactics.",
          "",
          " # Arguments",
          "",
          " * `caller` - AccountId of the player",
          " * `target` - The location of the planet to reinforce",
          " * `planet_id` - Which planet to attack (0..MAX_PLANETS)",
          " * `selection` - The fleet selection to register",
          " * `modules` - The modules to register with the fleet",
          " * `targeting` - The targeting to register with the fleet"
        ],
        "mutates": true,
        "name": [
          "reinforce_planet"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x507e6059"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 7
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 23
            }
          }
        ],
        "docs": [
          " Renames a planet",
          "",
          " # Arguments",
          "",
          " * `caller` - The player making the rename request",
          " * `target` - SystemCoordinate of the the planet to rename",
          " * `planet_id` - Which planet to rename (0..MAX_PLANETS)",
          " * `name` - The name to set"
        ],
        "mutates": true,
        "name": [
          "rename_planet"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xa02b6292"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          " Discovers a given system for a player",
          "",
          " # Arguments",
          "",
          " * `caller` - AccountId of the player making the discovery request",
          " * `target` - SystemCoordinate to discover a System in"
        ],
        "mutates": true,
        "name": [
          "discover_system"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x9966c534"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "source",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 7
            }
          }
        ],
        "docs": [
          " Builds a gateway (out) in a System in players universe",
          "",
          " # Arguments",
          "",
          " * `caller` - AccountId of the connecting player (building gateway out)",
          " * `source` - SystemCoordinate of the System to build gateway in"
        ],
        "mutates": true,
        "name": [
          "build_gateway"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x00d75f68"
      },
      {
        "args": [],
        "docs": [
          " Gets general game statistics",
          "",
          " # Returns",
          "",
          " * `stats` - The game statistics"
        ],
        "mutates": false,
        "name": [
          "get_game_stats"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "GameStats"
          ],
          "type": 26
        },
        "selector": "0xc5ab1911"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          " Gets the Assets for a given player",
          "",
          " # Arguments",
          "",
          " * `caller` - The player to get Assets for",
          "",
          " # Returns",
          "",
          " * `assets` - The Assets"
        ],
        "mutates": false,
        "name": [
          "get_player_assets"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "PlayerAssets"
          ],
          "type": 27
        },
        "selector": "0xd3cb40e7"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [],
        "mutates": false,
        "name": [
          "get_universe_map"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 28
        },
        "selector": "0xf6a850b7"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          }
        ],
        "docs": [
          " Harvest all planets in a players Universe, which the player owns",
          "",
          " # Arguments",
          "",
          " * `caller` - The player to harvest planets for"
        ],
        "mutates": true,
        "name": [
          "harvest"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xbdef407b"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 7
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          }
        ],
        "docs": [
          " Harvest a specific planet that the player owns",
          "",
          " # Arguments",
          "",
          " * `caller` - The player to harvest planet for",
          " * `target`- SystemCoordinate of the system the planet to harvest is in",
          " * `planet_id` - Which planet to harvest"
        ],
        "mutates": true,
        "name": [
          "harvest_planet"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x07e316a9"
      },
      {
        "args": [
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 7
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          }
        ],
        "docs": [
          " Upgrades a specific planet that the player owns",
          "",
          " # Arguments",
          "",
          " * `caller` - The player to upgrade planet for",
          " * `target`- SystemCoordinate of the system the planet to upgrade is in",
          " * `planet_id` - Which planet to upgrade"
        ],
        "mutates": true,
        "name": [
          "upgrade_planet"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x1363e094"
      },
      {
        "args": [
          {
            "name": "caller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "name": "target",
            "type": {
              "displayName": [
                "SystemCoordinate"
              ],
              "type": 7
            }
          },
          {
            "name": "planet_id",
            "type": {
              "displayName": [
                "u8"
              ],
              "type": 3
            }
          },
          {
            "name": "selection",
            "type": {
              "displayName": [],
              "type": 16
            }
          },
          {
            "name": "modules",
            "type": {
              "displayName": [],
              "type": 17
            }
          },
          {
            "name": "targeting",
            "type": {
              "displayName": [
                "TargetingType"
              ],
              "type": 20
            }
          }
        ],
        "docs": [
          " Attacks a planet",
          "",
          " # Arguments",
          "",
          " * `caller` - The player initating the attack",
          " * `target`- SystemCoordinate of the system the planet to attack is in",
          " * `planet_id` - Which planet to attack",
          " * `selection` - Fleet selection to use in the attack",
          " * `modules` - Fleet modules to use in the attack",
          " * `targeting` - Fleet targeting to use in the attack",
          "",
          " # Returns",
          "",
          " * `result` - The fight result"
        ],
        "mutates": true,
        "name": [
          "attack_planet"
        ],
        "payable": false,
        "returnType": {
          "displayName": [],
          "type": 29
        },
        "selector": "0x74f8152b"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
        {
          "layout": {
            "cell": {
              "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "ty": 1
            }
          },
          "name": "creator"
        },
        {
          "layout": {
            "enum": {
              "dispatchKey": "0x0100000000000000000000000000000000000000000000000000000000000000",
              "variants": {
                "0": {
                  "fields": [
                    {
                      "layout": {
                        "cell": {
                          "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                          "ty": 1
                        }
                      },
                      "name": null
                    }
                  ]
                },
                "1": {
                  "fields": []
                }
              }
            }
          },
          "name": "owner"
        },
        {
          "layout": {
            "enum": {
              "dispatchKey": "0x0200000000000000000000000000000000000000000000000000000000000000",
              "variants": {
                "0": {
                  "fields": [
                    {
                      "layout": {
                        "struct": {
                          "fields": [
                            {
                              "layout": {
                                "cell": {
                                  "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                                  "ty": 1
                                }
                              },
                              "name": "account_id"
                            }
                          ]
                        }
                      },
                      "name": null
                    }
                  ]
                },
                "1": {
                  "fields": []
                }
              }
            }
          },
          "name": "new_omega_game"
        },
        {
          "layout": {
            "enum": {
              "dispatchKey": "0x0300000000000000000000000000000000000000000000000000000000000000",
              "variants": {
                "0": {
                  "fields": [
                    {
                      "layout": {
                        "struct": {
                          "fields": [
                            {
                              "layout": {
                                "cell": {
                                  "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                                  "ty": 1
                                }
                              },
                              "name": "account_id"
                            }
                          ]
                        }
                      },
                      "name": null
                    }
                  ]
                },
                "1": {
                  "fields": []
                }
              }
            }
          },
          "name": "new_omega_storage"
        },
        {
          "layout": {
            "enum": {
              "dispatchKey": "0x0400000000000000000000000000000000000000000000000000000000000000",
              "variants": {
                "0": {
                  "fields": [
                    {
                      "layout": {
                        "struct": {
                          "fields": [
                            {
                              "layout": {
                                "cell": {
                                  "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
                                  "ty": 1
                                }
                              },
                              "name": "account_id"
                            }
                          ]
                        }
                      },
                      "name": null
                    }
                  ]
                },
                "1": {
                  "fields": []
                }
              }
            }
          },
          "name": "new_omega_universe_storage"
        }
      ]
    }
  },
  "types": [
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 2,
              "typeName": "[u8; 32]"
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "AccountId"
      ]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 3
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_id",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "newomegagame",
        "newomegagame",
        "NewOmegaGame"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_id",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "newomegastorage",
        "newomegastorage",
        "NewOmegaStorage"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "account_id",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "NewOmegaUniverseStorage"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "root",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "system_id",
              "type": 8,
              "typeName": "SystemId"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "SystemCoordinate"
      ]
    },
    {
      "def": {
        "primitive": "u64"
      }
    },
    {
      "def": {
        "tuple": [
          10,
          13
        ]
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 11,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        11
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "position",
              "type": 7,
              "typeName": "SystemCoordinate"
            },
            {
              "name": "gateway_in",
              "type": 12,
              "typeName": "Gateway"
            },
            {
              "name": "gateway_out",
              "type": 12,
              "typeName": "Gateway"
            },
            {
              "name": "planets",
              "type": 14,
              "typeName": "Vec<Planet>"
            },
            {
              "name": "discoverer",
              "type": 1,
              "typeName": "AccountId"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "System"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "built",
              "type": 13,
              "typeName": "bool"
            },
            {
              "name": "target",
              "type": 7,
              "typeName": "SystemCoordinate"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "Gateway"
      ]
    },
    {
      "def": {
        "primitive": "bool"
      }
    },
    {
      "def": {
        "sequence": {
          "type": 15
        }
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "selection",
              "type": 16,
              "typeName": "[u8; MAX_SHIPS]"
            },
            {
              "name": "modules",
              "type": 17,
              "typeName": "[Option<TokenId>; MAX_SHIPS]"
            },
            {
              "name": "targeting",
              "type": 20,
              "typeName": "TargetingType"
            },
            {
              "name": "level",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "owner",
              "type": 1,
              "typeName": "AccountId"
            },
            {
              "name": "planet_type",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "mineral_type",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "mineral_proof",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "last_harvested",
              "type": 21,
              "typeName": "BlockNumber"
            },
            {
              "name": "name",
              "type": 22,
              "typeName": "Option<String>"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "Planet"
      ]
    },
    {
      "def": {
        "array": {
          "len": 4,
          "type": 3
        }
      }
    },
    {
      "def": {
        "array": {
          "len": 4,
          "type": 18
        }
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 19,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        19
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "discriminant": 0,
              "name": "Furthest"
            },
            {
              "discriminant": 1,
              "name": "Closest"
            },
            {
              "discriminant": 2,
              "name": "HighestHp"
            },
            {
              "discriminant": 3,
              "name": "LowestHp"
            },
            {
              "discriminant": 4,
              "name": "HighestSpeed"
            },
            {
              "discriminant": 5,
              "name": "LowestSpeed"
            },
            {
              "discriminant": 6,
              "name": "HighestDefence"
            },
            {
              "discriminant": 7,
              "name": "LowestDefence"
            },
            {
              "discriminant": 8,
              "name": "HighestAttack"
            },
            {
              "discriminant": 9,
              "name": "LowestAttack"
            }
          ]
        }
      },
      "path": [
        "newomega",
        "newomega",
        "TargetingType"
      ]
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 23,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        23
      ],
      "path": [
        "Option"
      ]
    },
    {
      "def": {
        "primitive": "str"
      }
    },
    {
      "def": {
        "sequence": {
          "type": 1
        }
      }
    },
    {
      "def": {
        "sequence": {
          "type": 23
        }
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "no_players",
              "type": 8,
              "typeName": "u64"
            },
            {
              "name": "no_systems",
              "type": 8,
              "typeName": "u64"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "GameStats"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "name",
              "type": 23,
              "typeName": "String"
            },
            {
              "name": "last_system",
              "type": 8,
              "typeName": "SystemId"
            }
          ]
        }
      },
      "path": [
        "newomegauniversestorage",
        "newomegauniversestorage",
        "PlayerAssets"
      ]
    },
    {
      "def": {
        "sequence": {
          "type": 11
        }
      }
    },
    {
      "def": {
        "tuple": [
          30,
          1
        ]
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "selection_lhs",
              "type": 16,
              "typeName": "[u8; MAX_SHIPS]"
            },
            {
              "name": "selection_rhs",
              "type": 16,
              "typeName": "[u8; MAX_SHIPS]"
            },
            {
              "name": "modules_lhs",
              "type": 31,
              "typeName": "[ShipModule; MAX_SHIPS]"
            },
            {
              "name": "modules_rhs",
              "type": 31,
              "typeName": "[ShipModule; MAX_SHIPS]"
            },
            {
              "name": "targeting_lhs",
              "type": 20,
              "typeName": "TargetingType"
            },
            {
              "name": "targeting_rhs",
              "type": 20,
              "typeName": "TargetingType"
            },
            {
              "name": "lhs_dead",
              "type": 13,
              "typeName": "bool"
            },
            {
              "name": "rhs_dead",
              "type": 13,
              "typeName": "bool"
            },
            {
              "name": "rounds",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "seed",
              "type": 8,
              "typeName": "u64"
            },
            {
              "name": "ships_lost_lhs",
              "type": 16,
              "typeName": "[u8; MAX_SHIPS]"
            },
            {
              "name": "ships_lost_rhs",
              "type": 16,
              "typeName": "[u8; MAX_SHIPS]"
            }
          ]
        }
      },
      "path": [
        "newomega",
        "newomega",
        "FightResult"
      ]
    },
    {
      "def": {
        "array": {
          "len": 4,
          "type": 32
        }
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "snare",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "root",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "blind",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "attack_debuff",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "defence_debuff",
              "type": 3,
              "typeName": "u8"
            },
            {
              "name": "range_debuff",
              "type": 3,
              "typeName": "u8"
            }
          ]
        }
      },
      "path": [
        "newomega",
        "newomega",
        "ShipModule"
      ]
    }
  ]
}